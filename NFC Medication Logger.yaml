blueprint:
  name: "NFC Medication Logger (v9 – stable)"
  description: |
    💊 **Medication Tracker – Easy Setup**

    One automation = one medication.

    ✅ Features:
      • Tap an NFC tag to log a dose  
      • Prevent duplicate scans per day  
      • Warn if scanned too early/late (shows next dose)  
      • Optional reminders for missed doses  
      • Optional inventory tracking (with units-per-dose)  
      • Works automatically with the Medication Dashboard (entities named "med_*")

    🧭 **Setup**
      1. Fill out the form (no YAML).  
      2. Use a medication name (e.g., "Advil"); helpers should match the pattern `med_<name>_*`.  
      3. Create the “taken” helpers once:  
         `input_datetime.med_advil_dose1_taken` … `dose4_taken`  
         (and `input_number.med_advil_inventory` if tracking pills).  
      4. Scan the tag to log doses.  
      5. The dashboard will populate automatically.
  domain: automation

  input:
    med_name:
      name: "Medication Name"
      selector: { text: {} }

    med_dose:
      name: "Dose Description"
      description: "Example: 200 mg, 1 tablet"
      selector: { text: {} }

    med_directions:
      name: "Directions"
      description: "Example: Take every 6 hours as needed for pain"
      selector: { text: {} }

    tag_id:
      name: "NFC Tag ID"
      description: "Paste the Tag ID from Settings → Tags"
      selector: { text: {} }

    notify_service:
      name: "Notify Service"
      description: "Example: notify.mobile_app_mark_s_phone_2"
      selector: { text: {} }

    dose_window:
      name: "Valid Window (minutes before/after scheduled time)"
      default: 20
      selector:
        number:
          min: 0
          max: 120
          step: 1
          unit_of_measurement: minutes

    dose1_time:
      name: "Dose 1 Time"
      selector: { time: {} }
    dose2_time:
      name: "Dose 2 Time (optional)"
      selector: { time: {} }
    dose3_time:
      name: "Dose 3 Time (optional)"
      selector: { time: {} }
    dose4_time:
      name: "Dose 4 Time (optional)"
      selector: { time: {} }

    enable_reminders:
      name: "Enable Reminders"
      default: true
      selector: { boolean: {} }

    reminder_offset:
      name: "Reminder Offset (minutes after scheduled time)"
      default: 30
      selector:
        number:
          min: 0
          max: 180
          step: 1
          unit_of_measurement: minutes

    enable_inventory:
      name: "Enable Inventory Tracking"
      default: false
      selector: { boolean: {} }

    inventory_entity:
      name: "Inventory (remaining units)"
      selector:
        entity:
          domain: input_number

    units_per_dose:
      name: "Units per Dose"
      description: "How many pills/units are taken per dose"
      default: 1
      selector:
        number:
          min: 1
          max: 10
          step: 1

    low_inventory_threshold:
      name: "Low Inventory Threshold"
      default: 10
      selector:
        number:
          min: 0
          max: 500
          step: 1

mode: restart

# ================= VARIABLES =================
variables:
  v_med_name: !input med_name
  v_slug: "{{ v_med_name | lower | replace(' ','_') }}"
  v_med_dose: !input med_dose
  v_med_directions: !input med_directions
  v_notify: !input notify_service
  v_window: !input dose_window
  v_enable_reminders: !input enable_reminders
  v_reminder_offset: !input reminder_offset
  v_inv_enabled: !input enable_inventory
  v_inv_entity: !input inventory_entity
  v_units_per_dose: !input units_per_dose
  v_low_thresh: !input low_inventory_threshold
  dose1_time: !input dose1_time
  dose2_time: !input dose2_time
  dose3_time: !input dose3_time
  dose4_time: !input dose4_time
  dose1_taken: "{{ 'input_datetime.med_' ~ v_slug ~ '_dose1_taken' }}"
  dose2_taken: "{{ 'input_datetime.med_' ~ v_slug ~ '_dose2_taken' }}"
  dose3_taken: "{{ 'input_datetime.med_' ~ v_slug ~ '_dose3_taken' }}"
  dose4_taken: "{{ 'input_datetime.med_' ~ v_slug ~ '_dose4_taken' }}"

# ================= TRIGGERS =================
trigger:
  - platform: tag
    tag_id: !input tag_id
  - platform: time
    at: !input dose1_time
    id: dose1_reminder
  - platform: time
    at: !input dose2_time
    id: dose2_reminder
  - platform: time
    at: !input dose3_time
    id: dose3_reminder
  - platform: time
    at: !input dose4_time
    id: dose4_reminder

# ================= ACTIONS =================
action:
  - choose:
      # ---------- TAG SCANNED ----------
      - conditions:
          - condition: template
            value_template: "{{ trigger.platform == 'tag' }}"
        sequence:
          - variables:
              now_ts: "{{ as_timestamp(now()) }}"
              today: "{{ now().date() }}"
              times: >
                {{ [dose1_time, dose2_time, dose3_time, dose4_time]
                   | reject('in',['','unknown','unavailable']) | list }}
              doses: >
                {{ [
                  {'t': dose1_time, 'taken': dose1_taken},
                  {'t': dose2_time, 'taken': dose2_taken},
                  {'t': dose3_time, 'taken': dose3_taken},
                  {'t': dose4_time, 'taken': dose4_taken}
                ] }}

          # ---------- FIND MATCHING DOSE ----------
          - variables:
              valid_dose: >
                {% set ns = namespace(result=None) %}
                {% for d in doses if d.t %}
                  {% set sched_dt = today_at(d.t) %}
                  {% if sched_dt %}
                    {% set sched_ts = as_timestamp(sched_dt) %}
                    {% set win_start = sched_ts - (v_window|int * 60) %}
                    {% set win_end   = sched_ts + (v_window|int * 60) %}
                    {% if now_ts >= win_start and now_ts <= win_end %}
                      {% set ns.result = d %}
                      {% break %}
                    {% endif %}
                  {% endif %}
                {% endfor %}
                {{ ns.result }}

          - choose:
              # ---------- INSIDE WINDOW ----------
              - conditions:
                  - condition: template
                    value_template: "{{ valid_dose is not none }}"
                sequence:
                  - variables:
                      taken_entity: "{{ valid_dose.taken }}"
                      last_val: "{{ states(taken_entity) }}"
                      last_dt: >
                        {% if last_val not in ['unknown','unavailable',''] %}
                          {{ as_datetime(last_val) }}
                        {% else %}
                          {{ none }}
                        {% endif %}
                  - choose:
                      # --- Already taken today ---
                      - conditions:
                          - condition: template
                            value_template: "{{ last_dt and last_dt.date() == today }}"
                        sequence:
                          - service: "{{ v_notify }}"
                            data:
                              title: "⚠ Already taken"
                              message: >
                                {{ v_med_name }} ({{ v_med_dose }}) already taken today at
                                {{ last_dt.strftime('%-I:%M %p') }}.
                      # --- First scan today ---
                      - conditions: []
                        sequence:
                          - service: input_datetime.set_datetime
                            target:
                              entity_id: "{{ taken_entity }}"
                            data:
                              datetime: "{{ now() }}"
                          - service: "{{ v_notify }}"
                            data:
                              title: "✅ Dose logged"
                              message: >
                                {{ v_med_name }} ({{ v_med_dose }}) logged at
                                {{ as_local(now()).strftime('%-I:%M %p') }}.
                                Directions: {{ v_med_directions }}

                          # --- INVENTORY LOGIC ---
                          - choose:
                              - conditions:
                                  - condition: template
                                    value_template: "{{ v_inv_enabled and v_inv_entity }}"
                                sequence:
                                  - variables:
                                      current_qty: "{{ states(v_inv_entity) | int(0) }}"
                                      new_qty: "{{ (current_qty - v_units_per_dose|int) | max(0) }}"
                                  - service: input_number.set_value
                                    target:
                                      entity_id: "{{ v_inv_entity }}"
                                    data:
                                      value: "{{ new_qty }}"
                                  - choose:
                                      - conditions:
                                          - condition: template
                                            value_template: "{{ new_qty == 0 }}"
                                        sequence:
                                          - service: "{{ v_notify }}"
                                            data:
                                              title: "⛔ Out of medication"
                                              message: >
                                                {{ v_med_name }} inventory is now 0. Please refill.
                                      - conditions:
                                          - condition: template
                                            value_template: "{{ new_qty <= v_low_thresh and new_qty > 0 }}"
                                        sequence:
                                          - service: "{{ v_notify }}"
                                            data:
                                              title: "⚠ Low medication inventory"
                                              message: >
                                                {{ v_med_name }} running low: {{ new_qty }} units left
                                                (threshold {{ v_low_thresh }}).

              # ---------- OUTSIDE WINDOW ----------
              - conditions: []
                sequence:
                  - variables:
                      future_list: >
                        {% set f = [] %}
                        {% for t in times if t %}
                          {% set dt = today_at(t) %}
                          {% if dt >= now() %}
                            {% set f = f + [dt] %}
                          {% endif %}
                        {% endfor %}
                        {{ f }}
                      next_dt: >
                        {% if future_list | count > 0 %}
                          {{ future_list | min }}
                        {% else %}
                          {{ today_at(times | min) + timedelta(days=1) }}
                        {% endif %}
                      next_fmt: >
                        {{ as_local(as_datetime(next_dt)).strftime('%-I:%M %p') }}
                  - service: "{{ v_notify }}"
                    data:
                      title: "⏳ Not time yet"
                      message: >
                        It's not time for {{ v_med_name }} yet.
                        Next dose at {{ next_fmt }}.

      # ---------- REMINDER ----------
      - conditions:
          - condition: template
            value_template: >
              {{ trigger.id in ['dose1_reminder','dose2_reminder','dose3_reminder','dose4_reminder']
                 and v_enable_reminders }}
        sequence:
          - delay:
              minutes: "{{ v_reminder_offset | int }}"
          - service: "{{ v_notify }}"
            data:
              title: "💊 Reminder"
              message: >
                Reminder: {{ v_med_name }} ({{ v_med_dose }}) scheduled but not logged.
                Directions: {{ v_med_directions }}
